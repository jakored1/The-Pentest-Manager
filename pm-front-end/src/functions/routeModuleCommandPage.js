// This function determines what module's command's page needs to be shown and returns it
import ShellCommand from "../components/moduleDisplays/ShellCommand"
import Nmap from "../components/moduleDisplays/Nmap";
import { Tabs } from "antd";


const RouteModuleCommandPage = (commandInfo, moduleKey) => {

    const getModulePage = (commandInfo, moduleKey) => {
        switch (moduleKey) {
            case '1':
                return (<Nmap commandInfo={commandInfo} />)
            default:  // If there isn't a nice display page made to display the commands result then default to shell command output
                return (false)
        }
    }

    const modulePageExists = () => {
        if (commandInfo.module_specific_data === null) {
            return false
        }
        if (getModulePage(commandInfo, moduleKey) === false) {
            return false
        }
        if (commandInfo.module_specific_data === undefined) {
            return false
        }
        if (commandInfo.module_specific_data.replace(/\s/g,'') === '') {
            return false
        }
        return true
    }
        
    return (
        <Tabs
            centered={true}
            items={
                modulePageExists()
                ? // If there is a special module page
                (
                    [
                        {
                            label: 'Nice Display',
                            key: '0',
                            children: getModulePage(commandInfo, moduleKey),
                        },
                        {
                            label: 'Default Display',
                            key: '1',
                            children: <ShellCommand commandInfo={commandInfo} />,
                        }
                    ]
                ) : (  // If there is no special module page
                    [
                        {
                            label: 'Default Display',
                            key: '0',
                            children: <ShellCommand commandInfo={commandInfo} />,
                        }
                    ]
                )
            }
        />
    )
}

export default RouteModuleCommandPage;