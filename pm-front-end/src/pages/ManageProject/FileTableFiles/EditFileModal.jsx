import { Form, Input, Modal, notification } from "antd";
import { SaveOutlined } from "@ant-design/icons";
import { useEffect, useState } from "react";
import { editFileURL } from "../../../components/GlobalParams";
import axios from "axios";


function EditFileModal({editTextOpen, setEditTextOpen, fileDetails, getPageInfo}) {

    const [fileContent, setFileContent] = useState(fileDetails.file_content)
    const [fileName, setFileName] = useState(fileDetails.name)
    const [form] = Form.useForm()

    const handleSumbitFileEdit = (values) => {
        values.key = fileDetails.key
        axios.post(editFileURL, values)
        .then((res) => {
            if (res.data === 'file updated') {
                notification.success({
                    message: 'Success',
                    description: res.data,
                    placement: 'bottomRight'
                })
                setEditTextOpen(false)
                getPageInfo()
            } else {
                notification.error({
                    message: 'Error',
                    description: res.data,
                    placement: 'bottomRight'
                })
            }
        })
        .catch((err) => {
            console.log(err)
            notification.error({
                message: 'Error',
                description: 'ran into an error while updating the file',
                placement: 'bottomRight'
            })
        })
        setEditTextOpen(false)
    }

    useEffect(() => {
        setFileContent(fileDetails.file_content)
        setFileName(fileDetails.name)
    }, [fileDetails, editTextOpen])

    return (
        <Modal
            title={'Editing "' + fileName + '"'}
            open={editTextOpen}
            onOk={() => form.submit()}
            onCancel={() => setEditTextOpen(false)}
            okText="Save"
            okButtonProps={{ icon: <SaveOutlined /> }}
            width={'70%'}
        >
            <div>
                <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', marginTop: '-10px' }}>
                    <p style={{ marginRight: '5px', color: 'gray' }}>File Size:</p>
                    {fileDetails.size}
                </div>
                <Form
                    layout='vertical'
                    autoComplete="off"
                    onFinish={handleSumbitFileEdit}
                    initialValues={{
                        file_name: fileName,
                        file_content: fileContent
                    }}
                    form={form}
                >
                    <p style={{ marginBottom: '5px' }}><b>File Name:</b></p>
                    <Form.Item
                        name="file_name"
                        rules={[{
                            required: true,
                            whitespace: true,
                            message: 'missing file name'
                        }]}
                    >
                        <Input
                            style={{ width: '50%' }}
                            placeholder="file name"
                            onKeyDown={(event) => {  // Saving if user pressed Ctrl+S
                                let charCode = String.fromCharCode(event.which).toLowerCase()  // Checking what key was pressed
                                if((event.ctrlKey || event.metaKey) && charCode === 's') {  // Checking if ctrl+s was pressed
                                    event.preventDefault();  // Don't open a prompt to save the html page
                                    form.submit()
                                }
                            }}
                        />
                    </Form.Item>
                    <p><b>File Contents:</b></p>
                    <Form.Item
                        name="file_content"
                    >
                        <Input.TextArea
                            showCount
                            onKeyDown={(event) => {  // Saving if user pressed Ctrl+S
                                let charCode = String.fromCharCode(event.which).toLowerCase()  // Checking what key was pressed
                                if((event.ctrlKey || event.metaKey) && charCode === 's') {  // Checking if ctrl+s was pressed
                                    event.preventDefault();  // Don't open a prompt to save the html page
                                    form.submit()
                                }
                            }}
                            placeholder="blah blah blah blah"
                            autoSize={{
                                minRows: 16,
                                maxRows: 16
                            }}
                        />
                    </Form.Item>
                </Form>
                <br />
            </div>
        </Modal>
    )
}

export default EditFileModal;