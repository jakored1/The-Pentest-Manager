import { useEffect, useState } from 'react';
// eslint-disable-next-line
import { Layout, Menu, Image, Switch, theme, ConfigProvider } from 'antd';  // Attempted to use Image to make a nice image on the sidebar
import reconfigureIcons from './functions/reconfigureIcons';
import SelectionSwitch from './functions/loadPage';
import ConfigureBreadCrumbs from './functions/configureBreadCrumbs';
import logoImage from './images/logo.png';
import axios from 'axios';
import MainHeader from './MainHeader';
import { sidebarContentURL, themeColors } from './components/GlobalParams';


const { Header, Content, Footer, Sider } = Layout;


const App = () => {
    
    const [collapsed, setCollapsed] = useState(false);
    const [darkMode, setDarkMode] = useState(
        localStorage.getItem('darkMode') === 'true'
    )

    // Handling routing of different tabs
    const [selectedMenuItem, setSelectedMenuItem] = useState('0');
    // Remeber all tabs
    const [tabsHierarchy, setTabsHierarchy] = useState([])

    // Fetching sidebar tabs
    const [items, setItems] = useState([])
    const updateSidebarTabs = () => {
        axios.get(sidebarContentURL)
        .then((response) => {
            // Set icons
            setItems(reconfigureIcons(response.data))
            // Remeber tabs hierarchy
            setTabsHierarchy(response.data)
        })
        .catch((err) => {
            console.log(err);
        });
    }

    useEffect(() => {
        updateSidebarTabs()
        
    }, []);


    return (
        <ConfigProvider 
            theme={{ 
                algorithm: darkMode ? theme.darkAlgorithm : theme.defaultAlgorithm,
            }}
        >
            <Layout style={{ minHeight: '100vh' }}>
                <Sider 
                    theme={darkMode ? 'light' : 'dark'}
                    collapsible
                    collapsed={collapsed} onCollapse={(value) => setCollapsed(value)}
                >
                    <img src={logoImage} 
                        alt='logo' 
                        style={{
                            marginTop: '6%',
                            marginBottom: '5%',
                            marginInline: 'auto',
                            borderRadius: '50%', 
                            width: 50, 
                            height: 50, 
                            background: 'blue', 
                            display: 'block' }}
                    />
                    {/* <div style={{ marginLeft: '37%', marginTop: '5%', marginBottom: '7px', }}>
                        <Image 
                            style={{
                                
                                borderRadius: '50%',
                                width: 50,
                                height: 50,
                                background: 'blue',
                            }}
                            src={logoImage}
                        />
                    </div> */}
                    <Menu
                        theme={darkMode ? 'light' : 'dark'}
                        mode="inline"
                        items={items}
                        selectedKeys={selectedMenuItem}
                        onClick={(e) => setSelectedMenuItem(e.key)}
                    />
                    <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', justifyContent: 'center', marginTop: '30px' }}>
                    <Switch
                        checked={!darkMode}
                        checkedChildren={collapsed ? "light": "light mode"}
                        unCheckedChildren={collapsed ? "dark": "dark mode"}
                        onChange={() => {
                            localStorage.setItem('darkMode', !darkMode);
                            setDarkMode(!darkMode);
                        }}
                    />
                    </div>
                </Sider>

                <Layout className="site-layout">
                    <Header style={{ 
                        padding: 0, 
                        background: darkMode ? themeColors['background']['dark'] : themeColors['background']['light'], 
                        marginBottom: '10px' }}
                    >
                        <MainHeader darkMode={darkMode} />
                    </Header>
                    <Content style={{ margin: '0 16px', }} >
                        {ConfigureBreadCrumbs(selectedMenuItem, tabsHierarchy)}
                        <div
                        style={{
                            padding: 24,
                            minHeight: 360,
                            background: darkMode ? themeColors['background']['dark'] : themeColors['background']['light'] ,
                            marginTop: '5px'
                        }} >
                            {SelectionSwitch(selectedMenuItem, updateSidebarTabs, setSelectedMenuItem, darkMode)}
                        </div>
                    </Content>
                    <Footer style={{ textAlign: 'center', }} >
                        Pentest Manager v1.0, Created By Jakored 
                    </Footer>
                </Layout>
            </Layout>
        </ConfigProvider>
    );
};

export default App;
