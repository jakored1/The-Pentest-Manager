import axios from "axios";
import { useEffect, useState } from "react";
import { getRunningCommandsAmountURL, getUsageURL } from "./components/GlobalParams"
import { Divider, Progress, Tooltip } from "antd";


function MainHeader({darkMode}) {

    const [usageDict, setUsageDict] = useState({cpu: '0%', memory: '0%' })
    const [runningCommandsAmount, setRunningCommandsAmount] = useState('0')

    const updateUsageDict = () => {
        axios.get(getUsageURL)
        .then((res) => {
            setUsageDict(res.data)
        })
        .catch((err) => {
            console.log(err)
            setUsageDict({
                cpu: ' - ',
                memory: ' - ',
            })
        })
    }

    const updateRunningCommands = () => {
        axios.get(getRunningCommandsAmountURL)
        .then((res) => {
            setRunningCommandsAmount(res.data)
        })
        .catch((err) => {
            console.log(err)
            setRunningCommandsAmount('-')
        })
    }

    useEffect(() => {  // Every 5 seconds update the current usage
        updateUsageDict()
        updateRunningCommands()
        const interval = setInterval(() => {
            updateUsageDict()
            updateRunningCommands()
        }, 4500)
        return () => clearInterval(interval)
        // eslint-disable-next-line
    }, [])

    return (
        <div>
            <div style={{ position: 'relative' }}>
                <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', justifyContent: 'center' }}>

                    <div>
                        <Tooltip title="displays the amount of currently running commands">
                            <Progress
                                size={50}
                                type="circle" 
                                percent={0}
                                trailColor={darkMode ? 'lightgrey' : 'darkblue'}
                                format={() => (<div style={{ fontSize: 20 }}>{runningCommandsAmount}</div>)}
                            />
                        </Tooltip>
                    </div>
                    

                    <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', position: 'absolute', right: '0px', top: -15 }}>
                        <p>
                            <b>CPU: </b>{usageDict.cpu}
                        </p>
                        <Divider type="vertical" />
                        <p style={{ marginRight: '30px' }}>
                            <b>Memory: </b>{usageDict.memory}
                        </p>
                    </div>
                </div>
                
            </div>
        </div>
    )
}

export default MainHeader;
